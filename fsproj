#!/usr/bin/perl -w
use Net::DBus;
use Proc::ProcessTable;
use POSIX ('setsid');
use warnings;
use strict 'refs';
use threads;
use Thread::Queue;
use File::HomeDir;
my $home=&home();
my $conffile="$home/.config/FullscreenProj.pl/fsproj.conf";
my ($regex, $command, $timeout, @processes);
my $ON    = 'xset +dpms';
my $OFF   = 'xset -dpms';
my $TQ    = Thread::Queue->new;

sub readconf {
    if ( -e $conffile){
        undef $/;
        open CONFIG, $conffile;
        my $config = <CONFIG>;
        eval $config;
        print $timeout;
        close CONFIG;
        $/ = chr (10);
        undef $config;
    }
    else {
        $regex=qr/(libflash)|(vlc)|(mplayer)/;
        $timeout = 50;
        mkdir $conffile=~s/fsproj.conf//r;
        open CONFIG,">", $conffile;
        print CONFIG '$regex = '."\"".$regex."\";\n".'$timeout = '.$timeout.";\n";
        close CONFIG;
    }
}

sub ScreenSaver {
    foreach ( @{ 'Proc::ProcessTable'->new->table; } ) {
        if ( $_->cmndline =~ /xscreensaver/ ) {
            $command = qq(system "xscreensaver-command -deactivate");
        }

        elsif ( $_->cmndline =~ /kscreensaver/ ) {
            $command =
qq(Net::DBus->session->get_service("org.freedesktop.ScreenSaver")->get_object('/ScreenSaver')->SimulateUserActivity());
        }

        elsif ( $_->cmndline =~ /gnome-screensaver/ ) {
            $command =
qq(Net::DBus->session->get_service("org.gnome.ScreenSaver")->get_object('/')->SimulateUserActivity());
        }
    }
    return sub {
        while (1) {
            if ( $TQ->pending() ) {
                eval $command;
                if ($@) { warn $@; }
            }
            sleep $timeout;
        }
      }

}

sub daemonize {
    die "Can't chdir to /: $!" unless chdir '/';
    umask 0;
    die "Can't read /dev/null: $!"     unless open STDIN,  '/dev/null';
    die "Can't write to /dev/null: $!" unless open STDOUT, '>/dev/null';
    die "Can't write to /dev/null: $!" unless open STDERR, '>/dev/null';
    die "Can't fork: $!" unless defined( my $pid = fork );
    exit if $pid;
    die "Can't start a new session: $!" unless setsid();
    sleep 1;

    foreach ( @{ 'Proc::ProcessTable'->new->table; } ) {
        if ( ( $_->cmndline =~ /perl.*fsproj/ ) and ( $_->pid != $$ ) ) {
            die 'Another instance is running';
        }
    }

}

#&daemonize;
&readconf;
threads->create(&ScreenSaver)->detach;
open XPROP, 'xprop -spy -root _NET_ACTIVE_WINDOW |';
while (<XPROP>) {
    my $winid = s/.*?\# (.*)/$1/r;
    chomp $winid;
    @processes = ();
    foreach ( @{ 'Proc::ProcessTable'->new->table; } ) {
        if ( $_->cmndline =~ /$regex/ ) {
            push @processes, $_->pid;
        }
    }

    if ( ( qx#xprop -id $winid _NET_WM_PID# =~ s/[^\d]+//r ) ~~ @processes
        and `xprop -id $winid _NET_WM_STATE` =~ /_NET_WM_STATE_FULLSCREEN/ )
    {
        $TQ->enqueue(1);
        system $OFF;
    }
    else {
        system $ON;
        while ( $TQ->pending() ) { $TQ->dequeue() }
    }

}
