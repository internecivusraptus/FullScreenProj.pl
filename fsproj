#!/usr/bin/perl -w
use Proc::ProcessTable;
use POSIX ('setsid');
use warnings;
use strict 'refs';
$| = 1;
my (@processes) = ();
my $regex       = qr/(libflash)/;
my $ON          = 'D?1@ +0<9? ? ;:';
my $OFF         = 'B=/> -.:7= = 900';

sub daemonize {
    die "Can't chdir to /: $!" unless chdir '/';
    umask 0;
    die "Can't read /dev/null: $!"     unless open STDIN,  '/dev/null';
    die "Can't write to /dev/null: $!" unless open STDOUT, '>/dev/null';
    die "Can't write to /dev/null: $!" unless open STDERR, '>/dev/null';
    die "Can't fork: $!" unless defined( my $pid = fork );
    exit if $pid;
    die "Can't start a new session: $!" unless setsid();
}
&daemonize;
open XPROP, 'xprop -spy -root _NET_ACTIVE_WINDOW |';
while (<XPROP>) {
    my $winid = s/.*?\# (.*)/$1/r;
    chomp $winid;
    @processes = ();
    foreach ( @{ 'Proc::ProcessTable'->new->table; } ) {
        if ( $_->cmndline =~ /$regex/ ) {
            push @processes, $_->pid;
        }
    }

    if ( ( qx#xprop -id $winid _NET_WM_PID# =~ s/[^\d]+//r ) ~~ @processes
        and `xprop -id $winid _NET_WM_STATE` =~ /_NET_WM_STATE_FULLSCREEN/ )
    {
        system $OFF =~ y/\x2c-\x50/+\-d-x/r;
    }
    else {
        system $ON =~ tr/0-R/d-x/;
    }
}
